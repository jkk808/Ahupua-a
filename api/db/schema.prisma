// Don't forget to tell Prisma about your edits to this file using
// `yarn rw prisma migrate dev` or `yarn rw prisma db push`.
// `migrate` is like committing while `push` is for prototyping.
// Read more about both here:
// https://www.prisma.io/docs/orm/prisma-migrate

datasource db {
  provider = "postgres"
  url      = env("DATABASE_URL")
}

generator client {
  provider      = "prisma-client-js"
  binaryTargets = "native"
}

// Define your own datamodels here and run `yarn redwood prisma migrate dev`
// to create migrations for them and apply to your dev DB.

model Sensor {
  id        Int         @id @default(autoincrement())
  name      String?
  location  String?
  metrics   Metric[]
}

model Metric {
  id        Int         @id @default(autoincrement())
  value     Float
  timestamp DateTime    @default(now())
  type      String      // can use enum when transfer to postgres
  sensor    Sensor?     @relation(fields: [sensorID], references: [id])
  sensorID  Int
}

model Post {
  id        Int      @id @default(autoincrement())
  title     String
  body      String
  createdAt DateTime @default(now())
}

// USING STRING AS PLACEHOLDER FOR THIS ENUM
// enum MetricType {
//   TEMP
//   WATER_LEVEL
//   PH
//   CO2
// }